// Mocks generated by Mockito 5.3.2 from annotations
// in glas_client/test/service/glas_import/text_extractor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:glas_client/api/glas_import/dto/known_word_dto.dart' as _i4;
import 'package:glas_client/service/import/known_words_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [KnownWordsService].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockKnownWordsService extends _i1.Mock implements _i2.KnownWordsService {
  @override
  _i3.Future<void> createKnownWord(String? text) => (super.noSuchMethod(
        Invocation.method(
          #createKnownWord,
          [text],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.KnownWordDTO>> getKnownWords() => (super.noSuchMethod(
        Invocation.method(
          #getKnownWords,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.KnownWordDTO>>.value(<_i4.KnownWordDTO>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.KnownWordDTO>>.value(<_i4.KnownWordDTO>[]),
      ) as _i3.Future<List<_i4.KnownWordDTO>>);
}
